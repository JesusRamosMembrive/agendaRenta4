[
  {
    "path": "UI/wireframes_html_agenda_de_revisiones_solo_ui.html",
    "relative": true,
    "modified_at": "2025-10-28T13:18:29.458395+00:00",
    "symbols": [],
    "errors": []
  },
  {
    "path": "add_notification_email.py",
    "relative": true,
    "modified_at": "2025-10-29T17:14:54.880108+00:00",
    "symbols": [
      {
        "name": "add_email",
        "kind": "function",
        "lineno": 11,
        "parent": null,
        "docstring": "A\u00f1adir un email de notificaci\u00f3n a la base de datos"
      },
      {
        "name": "list_emails",
        "kind": "function",
        "lineno": 27,
        "parent": null,
        "docstring": "Listar todos los emails de notificaci\u00f3n"
      },
      {
        "name": "main",
        "kind": "function",
        "lineno": 47,
        "parent": null,
        "docstring": null
      }
    ],
    "errors": []
  },
  {
    "path": "app.py",
    "relative": true,
    "modified_at": "2025-10-29T17:18:22.330001+00:00",
    "symbols": [
      {
        "name": "User",
        "kind": "class",
        "lineno": 55,
        "parent": null,
        "docstring": "User class for Flask-Login"
      },
      {
        "name": "__init__",
        "kind": "method",
        "lineno": 57,
        "parent": "User",
        "docstring": null
      },
      {
        "name": "load_user",
        "kind": "function",
        "lineno": 63,
        "parent": null,
        "docstring": "Load user by ID for Flask-Login"
      },
      {
        "name": "get_task_counts",
        "kind": "function",
        "lineno": 78,
        "parent": null,
        "docstring": "Get counts of pending, problem, completed tasks, and pending alerts.\nReturns dict with 'pending', 'problems', 'completed', 'alerts' counts."
      },
      {
        "name": "generate_alerts",
        "kind": "function",
        "lineno": 146,
        "parent": null,
        "docstring": "Generate pending alerts based on alert_settings configuration.\nCreates one alert per task_type (not per section).\nThis function should be run periodically (daily) to create alerts.\n\nArgs:\n    reference_date: Date to use as reference (default: today)\n\nReturns:\n    dict with stats: {'generated': count, 'skipped': count, 'errors': [], 'email_stats': {...}}"
      },
      {
        "name": "check_alert_day",
        "kind": "function",
        "lineno": 226,
        "parent": null,
        "docstring": "Check if the reference_date matches the alert configuration.\n\nArgs:\n    reference_date: date object to check\n    frequency: alert frequency (daily, weekly, biweekly, monthly, quarterly, semiannual, annual)\n    alert_day: specific day configuration (day of week or day of month)\n\nReturns:\n    bool: True if alert should be generated for this date"
      },
      {
        "name": "send_email_notifications",
        "kind": "function",
        "lineno": 300,
        "parent": null,
        "docstring": "Send email notifications for newly generated alerts.\n\nArgs:\n    alert_list: List of dicts with keys: task_type_name, due_date, etc.\n\nReturns:\n    dict with stats: {'sent': count, 'failed': count, 'errors': []}"
      },
      {
        "name": "inject_task_counts",
        "kind": "function",
        "lineno": 438,
        "parent": null,
        "docstring": "Make task counts available to all templates"
      },
      {
        "name": "login",
        "kind": "function",
        "lineno": 459,
        "parent": null,
        "docstring": "Login page and authentication"
      },
      {
        "name": "logout",
        "kind": "function",
        "lineno": 489,
        "parent": null,
        "docstring": "Logout current user"
      },
      {
        "name": "index",
        "kind": "function",
        "lineno": 502,
        "parent": null,
        "docstring": "Redirect to inicio page (main dashboard)"
      },
      {
        "name": "inicio",
        "kind": "function",
        "lineno": 511,
        "parent": null,
        "docstring": "Main dashboard - Table with all URLs and their 8 task types"
      },
      {
        "name": "pendientes",
        "kind": "function",
        "lineno": 584,
        "parent": null,
        "docstring": "List of ALL pending tasks (not marked as OK or Problem)\nGenerates all possible combinations and excludes completed/problem tasks"
      },
      {
        "name": "problemas",
        "kind": "function",
        "lineno": 645,
        "parent": null,
        "docstring": "List of tasks with problems (status='problem')\nShows tasks from 2025-10 onwards that have issues"
      },
      {
        "name": "realizadas",
        "kind": "function",
        "lineno": 695,
        "parent": null,
        "docstring": "List of completed tasks (status='ok')\nShows complete history of all tasks marked as OK"
      },
      {
        "name": "configuracion",
        "kind": "function",
        "lineno": 740,
        "parent": null,
        "docstring": "Configuration page - CRUD for URLs, Alerts and Notification preferences"
      },
      {
        "name": "update_task",
        "kind": "function",
        "lineno": 806,
        "parent": null,
        "docstring": "Update task status (ok/problem) via AJAX\nReturns JSON response"
      },
      {
        "name": "save_observations",
        "kind": "function",
        "lineno": 854,
        "parent": null,
        "docstring": "Save observations for all tasks of a section (when there are problems)\nReturns JSON response"
      },
      {
        "name": "save_alert_settings",
        "kind": "function",
        "lineno": 884,
        "parent": null,
        "docstring": "Save alert settings for all task types\nExpects JSON: [{ task_type_id, alert_frequency, alert_day, enabled }, ...]"
      },
      {
        "name": "save_notification_preferences",
        "kind": "function",
        "lineno": 913,
        "parent": null,
        "docstring": "Save notification preferences for current user"
      },
      {
        "name": "add_url",
        "kind": "function",
        "lineno": 939,
        "parent": null,
        "docstring": "Add new URL/section"
      },
      {
        "name": "edit_url",
        "kind": "function",
        "lineno": 966,
        "parent": null,
        "docstring": "Edit existing URL/section"
      },
      {
        "name": "toggle_url",
        "kind": "function",
        "lineno": 992,
        "parent": null,
        "docstring": "Toggle active status of URL/section"
      },
      {
        "name": "delete_url",
        "kind": "function",
        "lineno": 1021,
        "parent": null,
        "docstring": "Delete URL/section (only if no associated tasks)"
      },
      {
        "name": "trigger_generate_alerts",
        "kind": "function",
        "lineno": 1052,
        "parent": null,
        "docstring": "Manually trigger alert generation for testing.\nCan accept optional date parameter (YYYY-MM-DD format)."
      },
      {
        "name": "alertas",
        "kind": "function",
        "lineno": 1084,
        "parent": null,
        "docstring": "Display ALL alerts (both active and dismissed)\nOne alert per task_type, not per section"
      },
      {
        "name": "dismiss_alert",
        "kind": "function",
        "lineno": 1124,
        "parent": null,
        "docstring": "Toggle alert status (active \u2194 dismissed)"
      },
      {
        "name": "not_found",
        "kind": "function",
        "lineno": 1173,
        "parent": null,
        "docstring": "Handle 404 errors"
      },
      {
        "name": "internal_error",
        "kind": "function",
        "lineno": 1188,
        "parent": null,
        "docstring": "Handle 500 errors"
      }
    ],
    "errors": []
  },
  {
    "path": "constants.py",
    "relative": true,
    "modified_at": "2025-10-29T17:16:45.589583+00:00",
    "symbols": [],
    "errors": []
  },
  {
    "path": "create_tasks_for_period.py",
    "relative": true,
    "modified_at": "2025-10-29T17:15:13.559188+00:00",
    "symbols": [
      {
        "name": "should_create_task_for_period",
        "kind": "function",
        "lineno": 16,
        "parent": null,
        "docstring": "Determina si se debe crear una tarea para un periodo dado seg\u00fan su periodicidad.\n\nArgs:\n    period: Periodo en formato \"YYYY-MM\" (ej: \"2025-11\")\n    periodicity: Tipo de periodicidad (\"weekly\", \"monthly\", \"quarterly\", \"biannual\", \"yearly\")\n\nReturns:\n    True si se debe crear la tarea, False si no"
      },
      {
        "name": "create_tasks_for_period",
        "kind": "function",
        "lineno": 57,
        "parent": null,
        "docstring": "Crea tareas para un periodo espec\u00edfico seg\u00fan las periodicidades configuradas.\n\nArgs:\n    period: Periodo en formato \"YYYY-MM\" (ej: \"2025-11\")\n    db_path: Ruta a la base de datos SQLite\n    verbose: Si True, muestra mensajes de progreso"
      },
      {
        "name": "get_db_task_stats",
        "kind": "function",
        "lineno": 171,
        "parent": null,
        "docstring": "Muestra estad\u00edsticas de tareas en la BD."
      },
      {
        "name": "main",
        "kind": "function",
        "lineno": 214,
        "parent": null,
        "docstring": "Script principal con argumentos CLI."
      }
    ],
    "errors": []
  },
  {
    "path": "database.py",
    "relative": true,
    "modified_at": "2025-10-28T14:26:48.815377+00:00",
    "symbols": [
      {
        "name": "init_db",
        "kind": "function",
        "lineno": 15,
        "parent": null,
        "docstring": "Crea las tablas de la base de datos si no existen."
      },
      {
        "name": "seed_task_types",
        "kind": "function",
        "lineno": 95,
        "parent": null,
        "docstring": "Inserta los 8 tipos de tareas con sus periodicidades iniciales."
      },
      {
        "name": "drop_all_tables",
        "kind": "function",
        "lineno": 132,
        "parent": null,
        "docstring": "\u26a0\ufe0f PELIGRO: Elimina todas las tablas (usar solo en desarrollo)"
      },
      {
        "name": "get_db_stats",
        "kind": "function",
        "lineno": 159,
        "parent": null,
        "docstring": "Muestra estad\u00edsticas de la base de datos (n\u00famero de registros por tabla)."
      },
      {
        "name": "main",
        "kind": "function",
        "lineno": 179,
        "parent": null,
        "docstring": "Script principal - Inicializa la BD y pobla tipos de tareas."
      }
    ],
    "errors": []
  },
  {
    "path": "explore_excel.py",
    "relative": true,
    "modified_at": "2025-10-28T09:10:18.532930+00:00",
    "symbols": [
      {
        "name": "explore_excel",
        "kind": "function",
        "lineno": 19,
        "parent": null,
        "docstring": "Explora estructura del archivo Excel y muestra informaci\u00f3n detallada."
      },
      {
        "name": "main",
        "kind": "function",
        "lineno": 109,
        "parent": null,
        "docstring": null
      }
    ],
    "errors": []
  },
  {
    "path": "load_sections.py",
    "relative": true,
    "modified_at": "2025-10-29T17:15:34.809279+00:00",
    "symbols": [
      {
        "name": "generate_section_name",
        "kind": "function",
        "lineno": 24,
        "parent": null,
        "docstring": "Genera un nombre descriptivo para la secci\u00f3n a partir de la URL.\n\nArgs:\n    url: URL completa (ej: \"https://www.r4.com/planes-de-pensiones/categorias\")\n    hierarchy_levels: Lista de niveles de jerarqu\u00eda (Col 2-6)\n\nReturns:\n    Nombre descriptivo (ej: \"Planes de Pensiones - Categor\u00edas\")"
      },
      {
        "name": "load_sections_from_excel",
        "kind": "function",
        "lineno": 70,
        "parent": null,
        "docstring": "Lee el Excel y carga las secciones (URLs) en la base de datos.\n\nArgs:\n    excel_path: Ruta al archivo Excel\n    db_path: Ruta a la base de datos SQLite"
      },
      {
        "name": "main",
        "kind": "function",
        "lineno": 174,
        "parent": null,
        "docstring": "Script principal."
      }
    ],
    "errors": []
  },
  {
    "path": "manage_users.py",
    "relative": true,
    "modified_at": "2025-10-29T17:14:28.695997+00:00",
    "symbols": [
      {
        "name": "add_user",
        "kind": "function",
        "lineno": 16,
        "parent": null,
        "docstring": "Add a new user"
      },
      {
        "name": "list_users",
        "kind": "function",
        "lineno": 41,
        "parent": null,
        "docstring": "List all users"
      },
      {
        "name": "delete_user",
        "kind": "function",
        "lineno": 73,
        "parent": null,
        "docstring": "Delete a user"
      },
      {
        "name": "change_password",
        "kind": "function",
        "lineno": 105,
        "parent": null,
        "docstring": "Change user password"
      },
      {
        "name": "show_help",
        "kind": "function",
        "lineno": 135,
        "parent": null,
        "docstring": "Show usage help"
      },
      {
        "name": "main",
        "kind": "function",
        "lineno": 171,
        "parent": null,
        "docstring": null
      }
    ],
    "errors": []
  },
  {
    "path": "migrate_to_postgres.py",
    "relative": true,
    "modified_at": "2025-10-29T17:56:59.402373+00:00",
    "symbols": [
      {
        "name": "get_sqlite_schema",
        "kind": "function",
        "lineno": 30,
        "parent": null,
        "docstring": "Get CREATE TABLE statement from SQLite"
      },
      {
        "name": "convert_sqlite_to_postgres_schema",
        "kind": "function",
        "lineno": 40,
        "parent": null,
        "docstring": "Convert SQLite CREATE TABLE to PostgreSQL syntax"
      },
      {
        "name": "migrate_table_data",
        "kind": "function",
        "lineno": 61,
        "parent": null,
        "docstring": "Migrate data from SQLite table to PostgreSQL"
      },
      {
        "name": "reset_sequences",
        "kind": "function",
        "lineno": 97,
        "parent": null,
        "docstring": "Reset PostgreSQL sequences to match current max IDs"
      },
      {
        "name": "main",
        "kind": "function",
        "lineno": 119,
        "parent": null,
        "docstring": null
      }
    ],
    "errors": []
  },
  {
    "path": "seed_users.py",
    "relative": true,
    "modified_at": "2025-10-28T14:43:00.950510+00:00",
    "symbols": [
      {
        "name": "seed_users",
        "kind": "function",
        "lineno": 16,
        "parent": null,
        "docstring": "Inserta usuarios de prueba en la tabla 'users'."
      },
      {
        "name": "list_users",
        "kind": "function",
        "lineno": 64,
        "parent": null,
        "docstring": "Lista todos los usuarios en la BD."
      },
      {
        "name": "main",
        "kind": "function",
        "lineno": 97,
        "parent": null,
        "docstring": "Script principal."
      }
    ],
    "errors": []
  },
  {
    "path": "static/js/main.js",
    "relative": true,
    "modified_at": "2025-10-29T16:18:42.667773+00:00",
    "symbols": [],
    "errors": []
  },
  {
    "path": "templates/alertas.html",
    "relative": true,
    "modified_at": "2025-10-29T16:18:42.667773+00:00",
    "symbols": [],
    "errors": []
  },
  {
    "path": "templates/base.html",
    "relative": true,
    "modified_at": "2025-10-29T17:30:55.173332+00:00",
    "symbols": [],
    "errors": []
  },
  {
    "path": "templates/configuracion.html",
    "relative": true,
    "modified_at": "2025-10-29T16:18:42.668728+00:00",
    "symbols": [],
    "errors": []
  },
  {
    "path": "templates/errors/404.html",
    "relative": true,
    "modified_at": "2025-10-28T15:38:43.959258+00:00",
    "symbols": [],
    "errors": []
  },
  {
    "path": "templates/errors/500.html",
    "relative": true,
    "modified_at": "2025-10-28T15:40:54.463366+00:00",
    "symbols": [],
    "errors": []
  },
  {
    "path": "templates/inicio.html",
    "relative": true,
    "modified_at": "2025-10-29T16:18:42.668728+00:00",
    "symbols": [],
    "errors": []
  },
  {
    "path": "templates/login.html",
    "relative": true,
    "modified_at": "2025-10-29T17:31:59.002618+00:00",
    "symbols": [],
    "errors": []
  },
  {
    "path": "templates/pendientes.html",
    "relative": true,
    "modified_at": "2025-10-29T16:18:42.668728+00:00",
    "symbols": [],
    "errors": []
  },
  {
    "path": "templates/problemas.html",
    "relative": true,
    "modified_at": "2025-10-29T16:18:42.668728+00:00",
    "symbols": [],
    "errors": []
  },
  {
    "path": "templates/realizadas.html",
    "relative": true,
    "modified_at": "2025-10-29T16:18:42.668728+00:00",
    "symbols": [],
    "errors": []
  },
  {
    "path": "utils.py",
    "relative": true,
    "modified_at": "2025-10-29T17:01:12.197917+00:00",
    "symbols": [
      {
        "name": "get_db_connection",
        "kind": "function",
        "lineno": 24,
        "parent": null,
        "docstring": "Create and return a database connection.\n\nReturns:\n    sqlite3.Connection: Database connection with Row factory"
      },
      {
        "name": "db_cursor",
        "kind": "function",
        "lineno": 37,
        "parent": null,
        "docstring": "Context manager for database operations.\nAutomatically handles connection lifecycle, commit/rollback, and cleanup.\n\nArgs:\n    commit: Whether to commit changes on success (default: True)\n\nUsage:\n    with db_cursor() as cursor:\n        cursor.execute(\"SELECT * FROM users\")\n        results = cursor.fetchall()\n    # Connection automatically committed and closed\n\nYields:\n    sqlite3.Cursor: Database cursor for queries"
      },
      {
        "name": "format_date",
        "kind": "function",
        "lineno": 71,
        "parent": null,
        "docstring": "Format date string to Spanish format: dd/mm/yyyy\n\nArgs:\n    date_str: Date string in format YYYY-MM-DD\n\nReturns:\n    str: Date in format dd/mm/yyyy, or original string if parsing fails"
      },
      {
        "name": "format_period",
        "kind": "function",
        "lineno": 90,
        "parent": null,
        "docstring": "Format period string from '2025-11' to 'Noviembre 2025'\n\nArgs:\n    period_str: Period string in format YYYY-MM\n\nReturns:\n    str: Period in Spanish format, or original string if parsing fails"
      },
      {
        "name": "generate_available_periods",
        "kind": "function",
        "lineno": 111,
        "parent": null,
        "docstring": "Generate list of available periods (last 6 months + current + next 6 months).\n\nReturns:\n    list: List of period strings in format 'YYYY-MM'"
      }
    ],
    "errors": []
  }
]